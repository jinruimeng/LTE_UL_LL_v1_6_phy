function results = LTE_set_results(UE_ACK,...
                                    UE_rv_idx,...
                                    UE_RBs_assigned,...
                                    UE_biterrors_coded,...
                                    UE_biterrors_uncoded,...
                                    UE_blocksize_coded,...
                                    UE_blocksize_uncoded,...
                                    UE_throughput_coded,...
                                    UE_throughput_uncoded,...
                                    UE_FER_coded,...
                                    UE_FER_uncoded,...
                                    UE_used_codewords,...
                                    UE_channel_error,...
                                    UE_channel_pred_error,...
                                    UE_papr,...
                                    UE_type,...
                                    UE_TTI_origin,...
                                    UE_delay_TTI,...
                                    UE_ID_count_current,...
                                    UE_ID_count_next,...
                                    cell_biterrors_coded,...
                                    cell_biterrors_uncoded,...
                                    cell_blocksize_coded,...
                                    cell_blocksize_uncoded,...
                                    cell_throughput_coded,...
                                    cell_throughput_uncoded,...
                                    cell_FER_coded,...
                                    cell_FER_uncoded,...
                                    cell_used_codewords,...
                                    nUE,...
                                    nBS,...
                                    tmp_SINR_SC_dB, ... 
                                    UE_used_cqi, ...
                                    UE_used_RI)
% Process temporary results for parallel simulations.
% Author: Stefan Schwarz, sschwarz@nt.tuwien.ac.at
% (c) 2016 by ITC
% www.nt.tuwien.ac.at

for uu = 1:nUE*nBS
    results.UE_specific(uu).ACK                 = UE_ACK(:,:,uu);
    results.UE_specific(uu).rv_idx              = UE_rv_idx(:,:,uu);
    results.UE_specific(uu).RBs_assigned        = UE_RBs_assigned(:,uu);
    results.UE_specific(uu).biterrors_coded     = UE_biterrors_coded(:,:,uu);
    results.UE_specific(uu).biterrors_uncoded   = UE_biterrors_uncoded(:,:,uu);
    results.UE_specific(uu).blocksize_coded     = UE_blocksize_coded(:,:,uu);
    results.UE_specific(uu).blocksize_uncoded   = UE_blocksize_uncoded(:,:,uu);
    results.UE_specific(uu).throughput_coded    = UE_throughput_coded(:,:,uu);
    results.UE_specific(uu).throughput_uncoded  = UE_throughput_uncoded(:,:,uu);
    results.UE_specific(uu).FER_coded           = UE_FER_coded(:,:,uu);
    results.UE_specific(uu).FER_uncoded         = UE_FER_uncoded(:,:,uu);
    results.UE_specific(uu).used_codewords      = UE_used_codewords(:,:,uu);
    results.UE_specific(uu).channel_error       = UE_channel_error(:,uu);
    results.UE_specific(uu).channel_pred_error  = UE_channel_pred_error(:,uu);
    results.UE_specific(uu).papr                = UE_papr(:,:,uu);
    
    results.UE_specific(uu).type                = UE_type{uu};
    results.UE_specific(uu).TTI_origin          = UE_TTI_origin(:,uu);
    results.UE_specific(uu).delay_TTI           = UE_delay_TTI(:,uu);
    results.UE_specific(uu).ID_count_current    = UE_ID_count_current(uu);
    results.UE_specific(uu).ID_count_next       = UE_ID_count_next(uu);
    results.UE_specific(uu).used_cqi            = UE_used_cqi(:,:,uu);
    results.UE_specific(uu).used_RI             = UE_used_RI(:,uu);

end

for bb = 1:nBS 
    results.cell_specific(bb).biterrors_coded    = cell_biterrors_coded(:,:,bb);
    results.cell_specific(bb).biterrors_uncoded  = cell_biterrors_uncoded(:,:,bb);
    results.cell_specific(bb).blocksize_coded    = cell_blocksize_coded(:,:,bb);
    results.cell_specific(bb).blocksize_uncoded  = cell_blocksize_uncoded(:,:,bb);
    results.cell_specific(bb).throughput_coded   = cell_throughput_coded(:,:,bb);
    results.cell_specific(bb).throughput_uncoded = cell_throughput_uncoded(:,:,bb);
    results.cell_specific(bb).FER_coded          = cell_FER_coded(:,:,bb);
    results.cell_specific(bb).FER_uncoded        = cell_FER_uncoded(:,:,bb);
    results.cell_specific(bb).used_codewords     = cell_used_codewords(:,:,bb);
    results.cell_specific(bb).SINR_SC_dB         = tmp_SINR_SC_dB(bb);
end
